initSidebarItems({"fn":[["allocdmem_free",""],["allocdmem_new",""],["allocdmem_pluginPtr",""],["memorymanager_flushAndFreeWriter","Write-back any previously returned writable memory, and free the writer."],["memorymanager_free","Safety`mm` must point to a valid object."],["memorymanager_freeReader",""],["memorymanager_getMutablePtr","Get a readable and writable pointer to this writer's memory."],["memorymanager_getReadablePtr","Get a pointer to this reader's memory."],["memorymanager_getReader","Get a read-accessor to the specified plugin memory. Must be freed via `memorymanager_freeReader`."],["memorymanager_getStringReader","Get a write-accessor to the specified plugin memory. Must be freed via `memorymanager_flushAndFreeWriter`."],["memorymanager_getWritablePtr","Get a writable pointer to this writer's memory. Initial contents are unspecified."],["memorymanager_getWriter","Get a write-accessor to the specified plugin memory."],["memorymanager_handleBrk","Fully handles the `brk` syscall, keeping the \"heap\" mapped in our shared mem file."],["memorymanager_handleMmap","Fully handles the `mmap` syscall"],["memorymanager_handleMprotect",""],["memorymanager_handleMremap",""],["memorymanager_handleMunmap","Fully handles the `munmap` syscall"],["memorymanager_initMapperIfNeeded","Initialize the MemoryMapper if it isn't already initialized. `thread` must be running and ready to make native syscalls."],["memorymanager_new","Safety`thread` must point to a valid object."],["memorymanager_readPtr","Copy data from this reader's memory."],["memorymanager_writePtr","Write data to this writer's memory."]]});