initSidebarItems({"fn":[["get_heap","Find the heap range, and map it if non-empty."],["get_regions",""],["log_regions",""],["map_stack","Finds where the stack is located and maps the region bounding the maximum stack size."],["page_size",""],["seek_helper","Shared implementation of seek for both MemoryReaderCursor and MemoryWriterCursor."]],"mod":[["export",""]],"static":[["HEAP_PROT",""],["STACK_PROT",""]],"struct":[["AllocdMem","Memory allocated by Shadow, in a remote address space."],["CopyingMemoryReader","A reader that copies data from the plugin process, resulting in extra copies when the data is accessed by reference."],["CopyingMemoryWriter",""],["MappedMemoryReader","A reader that accesses plugin memory directly."],["MappedMemoryWriter","A writer that accesses plugin memory directly."],["MemoryManager","Manages memory of a plugin process."],["MemoryMapper","Manages the address-space for a plugin process."],["MemoryReader","Read-accessor to plugin memory."],["MemoryReaderCursor","A MemoryReader that tracks a position within the region of memory it reads. Useful primarily via the std::io::Read trait."],["MemoryWriter","Write-accessor to plugin memory."],["MemoryWriterCursor","Wrapper around `MemoryWriter` that tracks a position within the buffer. Primarily for use with the `std::io::Write` trait."],["Region",""],["ShmFile","Shared memory file into which we relocate parts of the plugin's address space."]],"trait":[["MemoryReaderTrait","Low-level functions for reading plugin process memory."],["MemoryWriterTrait",""]]});