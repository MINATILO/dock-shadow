(function() {var implementors = {};
implementors["nix"] = [{"text":"impl UpperHex for AtFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for OFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for SealFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for FdFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for SpliceFFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for FallocateFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for ModuleInitFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for DeleteModuleFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MsFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MntFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MQ_OFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for FdFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for InterfaceFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for PollFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for CloneFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for EpollFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for EpollCreateFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for EfdFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MemFdCreateFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for ProtFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MapFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MRemapFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MsFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for MlockAllFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for Persona","synthetic":false,"types":[]},{"text":"impl UpperHex for Options","synthetic":false,"types":[]},{"text":"impl UpperHex for QuotaValidFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SaFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SfdFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SockFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for MsgFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for SFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for Mode","synthetic":false,"types":[]},{"text":"impl UpperHex for FsFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for InputFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for OutputFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for ControlFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for LocalFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for WaitPidFlag","synthetic":false,"types":[]},{"text":"impl UpperHex for AddWatchFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for InitFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for TimerFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for TimerSetTimeFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for AccessFlags","synthetic":false,"types":[]}];
implementors["shadow_rs"] = [{"text":"impl UpperHex for FileFlags","synthetic":false,"types":[]},{"text":"impl UpperHex for FileMode","synthetic":false,"types":[]},{"text":"impl UpperHex for FileStatus","synthetic":false,"types":[]},{"text":"impl UpperHex for DescriptorFlags","synthetic":false,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()